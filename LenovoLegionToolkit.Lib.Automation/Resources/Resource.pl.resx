<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ACAdapterConnectedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Gdy zasilanie sieciowe jest podłączone</value>
  </data>
  <data name="ACAdapterDisconnectedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Gdy zasilanie sieciowe jest odłączone</value>
  </data>
  <data name="DeactivateGPUAutomationStepState_KillApps" xml:space="preserve">
    <value>Zamknij aplikacje</value>
  </data>
  <data name="DeactivateGPUAutomationStepState_RestartGPU" xml:space="preserve">
    <value>Zrestartuj GPU</value>
  </data>
  <data name="Delay_Second" xml:space="preserve">
    <value>{0} sekunda</value>
  </data>
  <data name="Delay_Second_Many" xml:space="preserve">
    <value>{0} sekund</value>
  </data>
  <data name="LowWattageACAdapterConnectedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Gdy jest podłączony zasilacz o słabej mocy</value>
  </data>
  <data name="OnStartupAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Przy uruchomieniu</value>
  </data>
  <data name="PowerModeAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Gdy tryb zasilania ulegnie zmianie</value>
  </data>
  <data name="ProcessesAreRunningAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Przy uruchomieniu aplikacji</value>
  </data>
  <data name="ProcessesStopRunningAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Przy zamknięciu aplikacji</value>
  </data>
  <data name="TimeAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>We wskazanym czasie</value>
  </data>
  <data name="ExternalDisplayConnectedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Gdy podłączono wyświetlacz zewnętrzny</value>
  </data>
  <data name="ExternalDisplayDisconnectedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Gdy odłączono wyświetlacz zewnętrzny</value>
  </data>
  <data name="DisplayOnAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Gdy wyświetlacze zostaną włączone</value>
  </data>
  <data name="DisplayOffAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Gdy wyświetlacze zostaną wyłączone</value>
  </data>
  <data name="LidOpenedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Pokrywa otwarta</value>
  </data>
  <data name="LidClosedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Pokrywa zamknięta</value>
  </data>
  <data name="GamesStopAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Gdy gra się wyłączy</value>
  </data>
  <data name="GamesAreRunningAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Gdy gra jest uruchomiona</value>
  </data>
  <data name="UserInactivityAutomationPipelineTrigger_DisplayName_Zero" xml:space="preserve">
    <value>Gdy użytkownik staje się aktywny</value>
  </data>
  <data name="UserInactivityAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Gdy użytkownik staje się nieaktywny</value>
  </data>
  <data name="DeactivateGpuQuickAction_Title" xml:space="preserve">
    <value>Wyłącz GPU</value>
    <comment>The display name of the default Quick Action that is presented to the user upon first installation.</comment>
  </data>
  <data name="OverclockDiscreteGPUAutomationStepState_Off" xml:space="preserve">
    <value>Wyłączone</value>
  </data>
  <data name="OverclockDiscreteGPUAutomationStepState_On" xml:space="preserve">
    <value>Włączone</value>
  </data>
  <data name="GodModePresetChangedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Gdy szablon trybu własnego ulegnie zmianie</value>
  </data>
  <data name="PeriodicActionPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Akcja periodyczna</value>
    <comment>The display name of the periodic automation action.</comment>
  </data>
  <data name="WiFiConnectedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Gdy połączono z WiFi</value>
  </data>
  <data name="WiFiDisconnectedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Gdy rozłączono z WiFi</value>
  </data>
  <data name="OnResumeAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Przy wybudzeniu</value>
  </data>
  <data name="HDROffAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Gdy HDR jest wyłączony</value>
  </data>
  <data name="HDROnAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Gdy HDR jest włączony</value>
  </data>
  <data name="MacroAutomationStepState_Off" xml:space="preserve">
	  <value>Wyłączone</value>
  </data>
  <data name="MacroAutomationStepState_On" xml:space="preserve">
	  <value>Włączone</value>
  </data>
  <data name="DeviceDisconnectedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
	  <value>Gdy odłączane jest urządzenie</value>
  </data>
  <data name="DeviceConnectedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
	  <value>Gdy podłączane jest urządzenie</value>
  </data>
</root>