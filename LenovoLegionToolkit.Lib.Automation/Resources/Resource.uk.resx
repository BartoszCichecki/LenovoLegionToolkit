<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ACAdapterConnectedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Коли блок живлення під'єднаний</value>
  </data>
  <data name="ACAdapterDisconnectedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Коли блок живлення від'єднаний</value>
  </data>
  <data name="DeactivateGPUAutomationStepState_KillApps" xml:space="preserve">
    <value>Примусово закрити застосунки</value>
  </data>
  <data name="DeactivateGPUAutomationStepState_RestartGPU" xml:space="preserve">
    <value>Перезапустити ГП</value>
  </data>
  <data name="Delay_Second" xml:space="preserve">
    <value>{0} секунда</value>
  </data>
  <data name="Delay_Second_Many" xml:space="preserve">
    <value>{0} секунд</value>
  </data>
  <data name="LowWattageACAdapterConnectedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Коли малопотужний блок живлення під'єднаний</value>
  </data>
  <data name="OnStartupAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>При запуску</value>
  </data>
  <data name="PowerModeAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Коли режим потужності змінений</value>
  </data>
  <data name="ProcessesAreRunningAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>При запуску застосунку</value>
  </data>
  <data name="ProcessesStopRunningAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Коли застосунок закрито</value>
  </data>
  <data name="TimeAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>У зазначений час</value>
  </data>
  <data name="ExternalDisplayConnectedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Коли зовнішній дисплей підключений</value>
  </data>
  <data name="ExternalDisplayDisconnectedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Коли зовнішній дисплей відключений</value>
  </data>
  <data name="DisplayOnAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Коли дисплей увімкнений</value>
  </data>
  <data name="DisplayOffAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Коли дисплей вимкнутий</value>
  </data>
  <data name="LidOpenedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Кришка відкрита</value>
  </data>
  <data name="LidClosedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Кришка закрита</value>
  </data>
  <data name="GamesStopAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Коли гра закривається</value>
  </data>
  <data name="GamesAreRunningAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Коли гра запущена</value>
  </data>
  <data name="UserInactivityAutomationPipelineTrigger_DisplayName_Zero" xml:space="preserve">
    <value>Коли користувач стає активним</value>
  </data>
  <data name="UserInactivityAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Коли користувач стає неактивним</value>
  </data>
  <data name="DeactivateGpuQuickAction_Title" xml:space="preserve">
    <value>Вимкнути графічний процесор</value>
    <comment>The display name of the default Quick Action that is presented to the user upon first installation.</comment>
  </data>
  <data name="OverclockDiscreteGPUAutomationStepState_Off" xml:space="preserve">
    <value>Вимкнений</value>
  </data>
  <data name="OverclockDiscreteGPUAutomationStepState_On" xml:space="preserve">
    <value>Увімкнений</value>
  </data>
  <data name="GodModePresetChangedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Коли змінюється попереднє налаштування користувальницького режиму</value>
  </data>
  <data name="PeriodicActionPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Періодична дія</value>
    <comment>The display name of the periodic automation action.</comment>
  </data>
  <data name="WiFiConnectedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Коли під'єднано до Wi-Fi</value>
  </data>
  <data name="WiFiDisconnectedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Коли від'єднано від Wi-Fi</value>
  </data>
  <data name="OnResumeAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>При поновленні</value>
  </data>
  <data name="HDROffAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Коли HDR вимкнено</value>
  </data>
  <data name="HDROnAutomationPipelineTrigger_DisplayName" xml:space="preserve">
    <value>Коли HDR увімкнено</value>
  </data>
  <data name="MacroAutomationStepState_Off" xml:space="preserve">
	  <value>Вимкнути</value>
  </data>
  <data name="MacroAutomationStepState_On" xml:space="preserve">
	  <value>Увімкнути</value>
  </data>
  <data name="DeviceDisconnectedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
	  <value>Коли пристрій від'єднано</value>
  </data>
  <data name="DeviceConnectedAutomationPipelineTrigger_DisplayName" xml:space="preserve">
	  <value>Коли пристрій під'єднано</value>
  </data>
</root>