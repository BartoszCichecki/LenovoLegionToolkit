<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccentColorSource_Custom" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="AccentColorSource_System" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="AlwaysOnUSBState_Off" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="AlwaysOnUSBState_OnAlways" xml:space="preserve">
    <value>On, always</value>
  </data>
  <data name="AlwaysOnUSBState_OnWhenSleeping" xml:space="preserve">
    <value>On, when sleeping</value>
  </data>
  <data name="AutorunState_Disabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="AutorunState_Enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="AutorunState_EnabledDelayed" xml:space="preserve">
    <value>Enabled, delayed</value>
  </data>
  <data name="BatteryState_Conservation" xml:space="preserve">
    <value>Conservation</value>
  </data>
  <data name="BatteryState_Normal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="BatteryState_RapidCharge" xml:space="preserve">
    <value>Rapid Charge</value>
  </data>
  <data name="FlipToStartState_Off" xml:space="preserve">
    <value>Off</value>
    <comment>Informs the user that Flip to Start is or will be turned off.</comment>
  </data>
  <data name="FlipToStartState_On" xml:space="preserve">
    <value>On</value>
    <comment>Informs the user that Flip to Start is or will be turned on.</comment>
  </data>
  <data name="FnLockState_Off" xml:space="preserve">
    <value>Off</value>
    <comment>Informs the user that Fn Lock is or will be turned off.</comment>
  </data>
  <data name="FnLockState_On" xml:space="preserve">
    <value>On</value>
    <comment>Informs the user that Fn Lock is or will be turned on.</comment>
  </data>
  <data name="GPUController_PoweredOff" xml:space="preserve">
    <value>Powered Off</value>
  </data>
  <data name="GPUController_PoweredOn" xml:space="preserve">
    <value>Powered On</value>
  </data>
  <data name="HDRState_Off" xml:space="preserve">
    <value>Off</value>
    <comment>Informs the user that HDR is or will be turned off.</comment>
  </data>
  <data name="HDRState_On" xml:space="preserve">
    <value>On</value>
    <comment>Informs the user that HDR is or will be turned on.</comment>
  </data>
  <data name="HybridModeState_Off" xml:space="preserve">
    <value>dGPU</value>
  </data>
  <data name="HybridModeState_On" xml:space="preserve">
    <value>Hybrid</value>
  </data>
  <data name="HybridModeState_OnAuto" xml:space="preserve">
    <value>Hybrid-Auto</value>
  </data>
  <data name="HybridModeState_OnIGPUOnly" xml:space="preserve">
    <value>Hybrid-iGPU</value>
  </data>
  <data name="MicrophoneState_Off" xml:space="preserve">
    <value>Off</value>
    <comment>Informs the user that the microphone is or will be turned off.</comment>
  </data>
  <data name="MicrophoneState_On" xml:space="preserve">
    <value>On</value>
    <comment>Informs the user that the microphone is or will be turned on.</comment>
  </data>
  <data name="NotificationPosition_BottomCenter" xml:space="preserve">
    <value>Bottom center</value>
  </data>
  <data name="NotificationPosition_BottomLeft" xml:space="preserve">
    <value>Bottom left</value>
  </data>
  <data name="NotificationPosition_BottomRight" xml:space="preserve">
    <value>Bottom right</value>
  </data>
  <data name="NotificationPosition_Center" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="NotificationPosition_CenterLeft" xml:space="preserve">
    <value>Center left</value>
  </data>
  <data name="NotificationPosition_CenterRight" xml:space="preserve">
    <value>Center right</value>
  </data>
  <data name="NotificationPosition_TopCenter" xml:space="preserve">
    <value>Top center</value>
  </data>
  <data name="NotificationPosition_TopLeft" xml:space="preserve">
    <value>Top left</value>
  </data>
  <data name="NotificationPosition_TopRight" xml:space="preserve">
    <value>Top right</value>
  </data>
  <data name="OneLevelWhiteKeyboardBacklightState_Off" xml:space="preserve">
    <value>Off</value>
    <comment>Informs the user that One Level White Keyboard Backlight is or will be turned off.</comment>
  </data>
  <data name="OneLevelWhiteKeyboardBacklightState_On" xml:space="preserve">
    <value>On</value>
    <comment>Informs the user that One Level White Keyboard Backlight is or will be turned on.</comment>
  </data>
  <data name="OverdriveState_Off" xml:space="preserve">
    <value>Off</value>
    <comment>Informs the user that Overdrive is or will be turned off.</comment>
  </data>
  <data name="OverdriveState_On" xml:space="preserve">
    <value>On</value>
    <comment>Informs the user that Overdrive is or will be turned on.</comment>
  </data>
  <data name="PowerModeState_Balance" xml:space="preserve">
    <value>Balance</value>
  </data>
  <data name="PowerModeState_GodMode" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="PowerModeState_Performance" xml:space="preserve">
    <value>Performance</value>
  </data>
  <data name="PowerModeState_Quiet" xml:space="preserve">
    <value>Quiet</value>
  </data>
  <data name="RGBKeyboardBacklightSpeed_Fast" xml:space="preserve">
    <value>Fast</value>
  </data>
  <data name="RGBKeyboardBacklightSpeed_Fastest" xml:space="preserve">
    <value>Fastest</value>
  </data>
  <data name="RGBKeyboardBacklightSpeed_Slow" xml:space="preserve">
    <value>Slow</value>
  </data>
  <data name="RGBKeyboardBacklightSpeed_Slowest" xml:space="preserve">
    <value>Slowest</value>
  </data>
  <data name="RGBKeyboardBacklightBrightness_High" xml:space="preserve">
    <value>High</value>
  </data>
  <data name="RGBKeyboardBacklightBrightness_Low" xml:space="preserve">
    <value>Low</value>
  </data>
  <data name="RGBKeyboardBacklightEffect_Breath" xml:space="preserve">
    <value>Breath</value>
  </data>
  <data name="RGBKeyboardBacklightEffect_Smooth" xml:space="preserve">
    <value>Smooth</value>
  </data>
  <data name="RGBKeyboardBacklightEffect_Static" xml:space="preserve">
    <value>Static</value>
  </data>
  <data name="RGBKeyboardBacklightEffect_WaveLTR" xml:space="preserve">
    <value>Wave Left</value>
  </data>
  <data name="RGBKeyboardBacklightEffect_WaveRTL" xml:space="preserve">
    <value>Wave Right</value>
  </data>
  <data name="RGBKeyboardBacklightPreset_Off" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="RGBKeyboardBacklightPreset_One" xml:space="preserve">
    <value>Preset 1</value>
  </data>
  <data name="RGBKeyboardBacklightPreset_Three" xml:space="preserve">
    <value>Preset 3</value>
  </data>
  <data name="RGBKeyboardBacklightPreset_Two" xml:space="preserve">
    <value>Preset 2</value>
  </data>
  <data name="SpectrumKeyboardBacklightBrightness_High" xml:space="preserve">
    <value>High</value>
  </data>
  <data name="SpectrumKeyboardBacklightBrightness_Low" xml:space="preserve">
    <value>Low</value>
  </data>
  <data name="SpectrumKeyboardBacklightBrightness_Medium" xml:space="preserve">
    <value>Medium</value>
  </data>
  <data name="SpectrumKeyboardBacklightBrightness_Off" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="SpectrumKeyboardBacklightDirection_BottomToTop" xml:space="preserve">
    <value>Bottom to Top</value>
  </data>
  <data name="SpectrumKeyboardBacklightDirection_Clockwise" xml:space="preserve">
    <value>Clockwise</value>
  </data>
  <data name="SpectrumKeyboardBacklightDirection_CounterClockwise" xml:space="preserve">
    <value>Counter Clockwise</value>
  </data>
  <data name="SpectrumKeyboardBacklightDirection_LeftToRight" xml:space="preserve">
    <value>Left to Right</value>
  </data>
  <data name="SpectrumKeyboardBacklightDirection_RightToLeft" xml:space="preserve">
    <value>Right to Left</value>
  </data>
  <data name="SpectrumKeyboardBacklightDirection_TopToBottom" xml:space="preserve">
    <value>Top to Bottom</value>
  </data>
  <data name="SpectrumKeyboardBacklightEffectType_Always" xml:space="preserve">
    <value>Always</value>
  </data>
  <data name="SpectrumKeyboardBacklightEffectType_AudioBounce" xml:space="preserve">
    <value>Audio Bounce</value>
  </data>
  <data name="SpectrumKeyboardBacklightEffectType_AudioRipple" xml:space="preserve">
    <value>Audio Ripple</value>
  </data>
  <data name="SpectrumKeyboardBacklightEffectType_AuroraSync" xml:space="preserve">
    <value>Aurora Sync</value>
  </data>
  <data name="SpectrumKeyboardBacklightEffectType_ColorChange" xml:space="preserve">
    <value>Color Change</value>
  </data>
  <data name="SpectrumKeyboardBacklightEffectType_ColorPulse" xml:space="preserve">
    <value>Color Pulse</value>
  </data>
  <data name="SpectrumKeyboardBacklightEffectType_ColorWave" xml:space="preserve">
    <value>Color Wave</value>
  </data>
  <data name="SpectrumKeyboardBacklightEffectType_Rain" xml:space="preserve">
    <value>Rain</value>
  </data>
  <data name="SpectrumKeyboardBacklightEffectType_RainbowScrew" xml:space="preserve">
    <value>Rainbow Screw</value>
  </data>
  <data name="SpectrumKeyboardBacklightEffectType_RainbowWave" xml:space="preserve">
    <value>Rainbow Wave</value>
  </data>
  <data name="SpectrumKeyboardBacklightEffectType_Ripple" xml:space="preserve">
    <value>Ripple</value>
  </data>
  <data name="SpectrumKeyboardBacklightEffectType_Smooth" xml:space="preserve">
    <value>Smooth</value>
  </data>
  <data name="SpectrumKeyboardBacklightEffectType_Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="SpectrumKeyboardBacklightSpeed_Speed1" xml:space="preserve">
    <value>Slow</value>
  </data>
  <data name="SpectrumKeyboardBacklightSpeed_Speed2" xml:space="preserve">
    <value>Medium</value>
  </data>
  <data name="SpectrumKeyboardBacklightSpeed_Speed3" xml:space="preserve">
    <value>Fast</value>
  </data>
  <data name="Theme_Dark" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="Theme_Light" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="Theme_System" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="TouchpadLockState_Off" xml:space="preserve">
    <value>Off</value>
    <comment>Informs the user that Touchpad Lock is or will be turned off.</comment>
  </data>
  <data name="TouchpadLockState_On" xml:space="preserve">
    <value>On</value>
    <comment>Informs the user that Touchpad Lock is or will be turned on.</comment>
  </data>
  <data name="WhiteKeyboardBacklightState_High" xml:space="preserve">
    <value>High</value>
  </data>
  <data name="WhiteKeyboardBacklightState_Low" xml:space="preserve">
    <value>Low</value>
  </data>
  <data name="WhiteKeyboardBacklightState_Off" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="WinKeyState_Off" xml:space="preserve">
    <value>Off</value>
    <comment>Informs the user that WinLock is or will be turned on.</comment>
  </data>
  <data name="WinKeyState_On" xml:space="preserve">
    <value>On</value>
    <comment>Informs the user that WinLock is or will be turned on.</comment>
  </data>
  <data name="PortsBacklightState_Off" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="PortsBacklightState_On" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="PanelLogoBacklightState_On" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="PanelLogoBacklightState_Off" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="InstantBootState_Off" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="InstantBootState_AcAdapter" xml:space="preserve">
    <value>AC Adapter</value>
  </data>
  <data name="InstantBootState_UsbPowerDelivery" xml:space="preserve">
    <value>USB Power Delivery</value>
  </data>
  <data name="InstantBootState_AcAdapterAndUsbPowerDelivery" xml:space="preserve">
    <value>AC and USB PD</value>
  </data>
  <data name="NotificationDuration_Long" xml:space="preserve">
    <value>Long</value>
  </data>
  <data name="NotificationDuration_Normal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="NotificationDuration_Short" xml:space="preserve">
    <value>Short</value>
  </data>
  <data name="ModifierKey_Shift" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="ModifierKey_Ctrl" xml:space="preserve">
    <value>Ctrl</value>
  </data>
  <data name="ModifierKey_Alt" xml:space="preserve">
    <value>Alt</value>
  </data>
  <data name="BatteryNightChargeState_On" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="BatteryNightChargeState_Off" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="SpeakerState_Mute" xml:space="preserve">
    <value>Mute</value>
  </data>
  <data name="SpeakerState_Unmute" xml:space="preserve">
    <value>Unmute</value>
  </data>
  <data name="PowerModeMappingMode_Disabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="PowerModeMappingMode_WindowsPowerMode" xml:space="preserve">
    <value>Windows Power Mode</value>
  </data>
  <data name="PowerModeMappingMode_WindowsPowerPlan" xml:space="preserve">
    <value>Windows Power Plan</value>
  </data>
  <data name="RGBKeyboardBacklightPreset_Four" xml:space="preserve">
    <value>Preset 4</value>
  </data>
  <data name="UpdateCheckFrequency_PerDay" xml:space="preserve">
    <value>Daily</value>
  </data>
  <data name="UpdateCheckFrequency_PerHour" xml:space="preserve">
    <value>Every hour</value>
  </data>
  <data name="UpdateCheckFrequency_PerMonth" xml:space="preserve">
    <value>Monthly</value>
  </data>
  <data name="UpdateCheckFrequency_PerThreeHours" xml:space="preserve">
    <value>Every 3 hours</value>
  </data>
  <data name="UpdateCheckFrequency_PerTwelveHours" xml:space="preserve">
    <value>Every 12 hours</value>
  </data>
  <data name="UpdateCheckFrequency_PerWeek" xml:space="preserve">
    <value>Weekly</value>
  </data>
</root>